{
  "Resources": {
    "BackendVPC5F3A56B6": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/Resource"
      }
    },
    "BackendVPCPublicSubnet1Subnet2B870F46": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet1/Subnet"
      }
    },
    "BackendVPCPublicSubnet1RouteTableC04F585C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet1/RouteTable"
      }
    },
    "BackendVPCPublicSubnet1RouteTableAssociation8FAB5E8E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPublicSubnet1RouteTableC04F585C"
        },
        "SubnetId": {
          "Ref": "BackendVPCPublicSubnet1Subnet2B870F46"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "BackendVPCPublicSubnet1DefaultRoute0CB01EBE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPublicSubnet1RouteTableC04F585C"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "BackendVPCIGWBDB487F3"
        }
      },
      "DependsOn": [
        "BackendVPCVPCGW1A2F763B"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet1/DefaultRoute"
      }
    },
    "BackendVPCPublicSubnet1EIPBE09E244": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet1/EIP"
      }
    },
    "BackendVPCPublicSubnet1NATGatewayB2B9B5E7": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "BackendVPCPublicSubnet1EIPBE09E244",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "BackendVPCPublicSubnet1Subnet2B870F46"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet1/NATGateway"
      }
    },
    "BackendVPCPublicSubnet2Subnet26E891E3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet2/Subnet"
      }
    },
    "BackendVPCPublicSubnet2RouteTableFCDD5CDF": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet2/RouteTable"
      }
    },
    "BackendVPCPublicSubnet2RouteTableAssociation08744EE5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPublicSubnet2RouteTableFCDD5CDF"
        },
        "SubnetId": {
          "Ref": "BackendVPCPublicSubnet2Subnet26E891E3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "BackendVPCPublicSubnet2DefaultRoute7B9CD519": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPublicSubnet2RouteTableFCDD5CDF"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "BackendVPCIGWBDB487F3"
        }
      },
      "DependsOn": [
        "BackendVPCVPCGW1A2F763B"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet2/DefaultRoute"
      }
    },
    "BackendVPCPublicSubnet2EIPDD2C7ECD": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet2/EIP"
      }
    },
    "BackendVPCPublicSubnet2NATGatewayAF1AFFB2": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "BackendVPCPublicSubnet2EIPDD2C7ECD",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "BackendVPCPublicSubnet2Subnet26E891E3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PublicSubnet2/NATGateway"
      }
    },
    "BackendVPCPrivateSubnet1Subnet3D54F9BA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet1/Subnet"
      }
    },
    "BackendVPCPrivateSubnet1RouteTable46B481E4": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet1/RouteTable"
      }
    },
    "BackendVPCPrivateSubnet1RouteTableAssociationAD45EBF9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPrivateSubnet1RouteTable46B481E4"
        },
        "SubnetId": {
          "Ref": "BackendVPCPrivateSubnet1Subnet3D54F9BA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "BackendVPCPrivateSubnet1DefaultRouteBBE0142A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPrivateSubnet1RouteTable46B481E4"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "BackendVPCPublicSubnet1NATGatewayB2B9B5E7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "BackendVPCPrivateSubnet2SubnetC87D8BE6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet2/Subnet"
      }
    },
    "BackendVPCPrivateSubnet2RouteTable9174E298": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet2/RouteTable"
      }
    },
    "BackendVPCPrivateSubnet2RouteTableAssociationE96138FE": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPrivateSubnet2RouteTable9174E298"
        },
        "SubnetId": {
          "Ref": "BackendVPCPrivateSubnet2SubnetC87D8BE6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "BackendVPCPrivateSubnet2DefaultRoute17987241": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BackendVPCPrivateSubnet2RouteTable9174E298"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "BackendVPCPublicSubnet2NATGatewayAF1AFFB2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "BackendVPCIGWBDB487F3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "BackendStack/BackendVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/IGW"
      }
    },
    "BackendVPCVPCGW1A2F763B": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "InternetGatewayId": {
          "Ref": "BackendVPCIGWBDB487F3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendVPC/VPCGW"
      }
    },
    "BackendFargateClusterEB7F7C18": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "BackendFargateCluster"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendFargateCluster/Resource"
      }
    },
    "DnsNamespaceE8F044C2": {
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
      "Properties": {
        "Name": "http-api.local",
        "Vpc": {
          "Ref": "BackendVPC5F3A56B6"
        },
        "Description": "Private DnsNamespace"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/DnsNamespace/Resource"
      }
    },
    "BackendServiceTaskDefTaskRole3D717C31": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendServiceTaskDef/TaskRole/Resource"
      }
    },
    "BackendServiceTaskDef858E1E29": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "facoliveira/desafiocambio-backend:latest",
            "Name": "BackendServiceContainer",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "512",
        "Family": "BackendStackBackendServiceTaskDef500C1A14",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "BackendServiceTaskDefTaskRole3D717C31",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendServiceTaskDef/Resource"
      }
    },
    "BackendServiceSecurityGroupF0F7037A": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "BackendStack/BackendServiceSecurityGroup",
        "GroupName": "BackendServiceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendServiceSecurityGroup/Resource"
      }
    },
    "BackendServiceSecurityGroupfromBackendStackApiInternalALBSecurityGroupAC5D6F8E80612360E0": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "BackendServiceSecurityGroupF0F7037A",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ApiInternalALBSecurityGroupF7CA4333",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendServiceSecurityGroup/from BackendStackApiInternalALBSecurityGroupAC5D6F8E:80"
      }
    },
    "BackendService7A4224EE": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "BackendFargateClusterEB7F7C18"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "BackendServiceContainer",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "ApiInternalALBApiListenerBackendServiceTargetGroupGroup8C170304"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "BackendServiceSecurityGroupF0F7037A",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "BackendVPCPrivateSubnet1Subnet3D54F9BA"
              },
              {
                "Ref": "BackendVPCPrivateSubnet2SubnetC87D8BE6"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "BackendServiceCloudmapService7E353D12",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "BackendServiceTaskDef858E1E29"
        }
      },
      "DependsOn": [
        "ApiInternalALBApiListenerBackendServiceTargetGroupRuleA2E1E9F5"
      ],
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendService/Service"
      }
    },
    "BackendServiceCloudmapService7E353D12": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "DnsNamespaceE8F044C2",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 1
        },
        "Name": "BackendService",
        "NamespaceId": {
          "Fn::GetAtt": [
            "DnsNamespaceE8F044C2",
            "Id"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/BackendService/CloudmapService/Resource"
      }
    },
    "ApiInternalALB0738B60A": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ApiInternalALBSecurityGroupF7CA4333",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "BackendVPCPrivateSubnet1Subnet3D54F9BA"
          },
          {
            "Ref": "BackendVPCPrivateSubnet2SubnetC87D8BE6"
          }
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiInternalALB/Resource"
      }
    },
    "ApiInternalALBSecurityGroupF7CA4333": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB BackendStackApiInternalALBF34E314A",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiInternalALB/SecurityGroup/Resource"
      }
    },
    "ApiInternalALBSecurityGrouptoBackendStackBackendServiceSecurityGroupEC846E5C80914BBC10": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "ApiInternalALBSecurityGroupF7CA4333",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "BackendServiceSecurityGroupF0F7037A",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiInternalALB/SecurityGroup/to BackendStackBackendServiceSecurityGroupEC846E5C:80"
      }
    },
    "ApiInternalALBApiListener470788D4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "StatusCode": "200"
            },
            "Type": "fixed-response"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "ApiInternalALB0738B60A"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiInternalALB/ApiListener/Resource"
      }
    },
    "ApiInternalALBApiListenerBackendServiceTargetGroupGroup8C170304": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/api/health",
        "HealthCheckTimeoutSeconds": 3,
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "BackendVPC5F3A56B6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiInternalALB/ApiListener/BackendServiceTargetGroupGroup/Resource"
      }
    },
    "ApiInternalALBApiListenerBackendServiceTargetGroupRuleA2E1E9F5": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "ApiInternalALBApiListenerBackendServiceTargetGroupGroup8C170304"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "Values": [
              "/api/*"
            ]
          }
        ],
        "ListenerArn": {
          "Ref": "ApiInternalALBApiListener470788D4"
        },
        "Priority": 1
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/ApiInternalALB/ApiListener/BackendServiceTargetGroupRule/Resource"
      }
    },
    "VpcLink": {
      "Type": "AWS::ApiGatewayV2::VpcLink",
      "Properties": {
        "Name": "http-api-vpclink",
        "SubnetIds": [
          {
            "Ref": "BackendVPCPrivateSubnet1Subnet3D54F9BA"
          },
          {
            "Ref": "BackendVPCPrivateSubnet2SubnetC87D8BE6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/VpcLink"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAACn1RwW7CMAz9Fu4h0GnaeQwYQpoQKoi7CYYZ2qSKkyJU9d+X0nbtNrSTn59fHD87ktE4kuPBK1x5qA6XUaGMRVlsHKiLiJGNtwrF9Kg7bDQ765UrRfWoQPUki12mKtFuPRVrv09Ibfxeo6u4DsXGO9zCPsGO77gJs1EEjoz+FldgvlxXYQVuAQ6vcBNrS3mAXeOldmgDbgX1JE02ccHLZ4raiQ0qb8ndFtb47D7Dv8RSnywy/+Hnd7oUqFgW08Rz+L0StfAd7AkqV3yZ4ZE0tZ5+M0Y7II22xzVvN2hzqhffwFJwDQ7EyuRob7JoFjHTvIIUOYP6xSP6UUOCVBaxqc9RxWApAXakEgOHPSSgFelTHu47ybJw1PtxPkLt7V6rXf/I+zoKy9CNpsW9+jY4DSdrN99PH3SJfT1mPy/LUmhzQHnmUR49y+hFRoMzEw2t145SlHEdvwB2V5el5gIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "BackendStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "ExportsOutputRefVpcLinkEC884E47": {
      "Value": {
        "Ref": "VpcLink"
      },
      "Export": {
        "Name": "BackendStack:ExportsOutputRefVpcLinkEC884E47"
      }
    },
    "ExportsOutputRefApiInternalALBApiListener470788D441DD92F3": {
      "Value": {
        "Ref": "ApiInternalALBApiListener470788D4"
      },
      "Export": {
        "Name": "BackendStack:ExportsOutputRefApiInternalALBApiListener470788D441DD92F3"
      }
    }
  }
}